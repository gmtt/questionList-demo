{"version":3,"sources":["component/CSC_Reader/CSV_Reader.js","component/CSC_Reader/action.js","component/ListPanel/ListItem.js","component/ListPanel/ListPanel.js","component/FilterPanel/FilterChip.js","component/FilterPanel/action.js","component/FilterPanel/FilterDialog.js","component/FilterPanel/FilterAdd.js","component/FilterPanel/FilterPanel.js","component/SortPanel/action.js","component/SortPanel/SortPanel.js","App.js","serviceWorker.js","store/reducer.js","store/store.js","index.js"],"names":["connect","dispatch","addQuestions","data","entities","keys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","slice","Symbol","iterator","next","done","info","value","entity","index","start_date","Date","parse","end_date","hasOwnProperty","push","err","return","type","props","react_default","a","createElement","react_csv_reader_default","onFileLoaded","ListItem","index_es","gutterBottom","variant","component","title","description","ListPanel","checkFilter","_this","filters","now","is_voided","is_resolved","checkCategory","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","category","c","categories","sortByTime","items","flag","sort","b","_this2","this","Object","toConsumableArray","groupByCategory","_this$props","preCategory","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","length","key","ListPanel_ListItem","React","Component","state","questions","FilterChip","label","color","onDelete","removeFilter","name","removeCategory","FilterDialog","react","open","onClose","List_default","primary","map","n","includes","button","onClick","ListItemIcon_default","Check_default","inset","addFilter","addCategory","e","FilterAdd","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","dialogOpen","handleClose","FilterPanel_FilterDialog","f","FilterPanel_FilterChip","FilterPanel_FilterAdd","toggleSort","toggleGroup","icon","text","ArrowDownward_default","ArrowUpward_default","Remove_default","Fab_default","size","control","checked","onChange","App","className","CSC_Reader_CSV_Reader","FilterPanel_FilterPanel","SortPanel_SortPanel","component_ListPanel_ListPanel","Boolean","window","location","hostname","match","STATUS","combineReducers","arguments","action","objectSpread","newFilters","filter","concat","store","createStore","reducer","devToolsEnhancer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52c33a0f.chunk.js","sourcesContent":["import React from 'react';\nimport CSVReader from \"react-csv-reader\";\nimport * as PropTypes from \"prop-types\";\nimport {addQuestions} from \"./action\";\nimport {connect} from \"react-redux\";\n\nfunction CSV_Reader(props) {\n   return(\n       <div>\n          <CSVReader\n              onFileLoaded={(data)=>props.addQuestions(data)}\n          />\n       </div>\n   )\n}\n\nCSV_Reader.propTypes = {\n    addQuestions: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n   addQuestions: (data)=>dispatch(addQuestions(data))\n});\n\nexport default connect(null, mapDispatchToProps)(CSV_Reader);","export const addQuestions = data => {\n    let entities = [];\n    let keys = data[0];\n    for (let info of data.slice(1)){\n        let entity = {};\n        for (let index in info){\n            entity[keys[index]] = info[index];\n        }\n        entity.start_date = Date.parse(entity.start_date);\n        entity.end_date = Date.parse(entity.end_date);\n        if (entity.hasOwnProperty('title'))\n            entities.push(entity);\n    }\n\n    return {\n        type: 'add_questions',\n        entities\n    }\n};\n","import * as PropTypes from \"prop-types\";\nimport React from 'react';\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\n\nfunction ListItem(props) {\n    return(\n        <Card>\n            <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                    {props.title}\n                </Typography>\n                <Typography component='p'>\n                    {props.description}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nListItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n};\n\nexport default ListItem;","import React from \"react\";\nimport {Paper, Typography} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport ListItem from \"./ListItem\";\nimport * as PropTypes from 'prop-types'\n\nclass ListPanel extends React.Component {\n\n    checkFilter = (entity) => {\n        for (let filter of this.props.filters) {\n            switch (filter) {\n                case 'open':\n                    if (Date.now() < entity.start_date || Date.now() >= entity.end_date) {\n                        return false;\n                    }\n                    break;\n                case 'closed':\n                    if (Date.now() < entity.end_date) return false;\n                    break;\n                case 'voided': {\n                    if (entity.is_voided === 'False') {\n                        return false;\n                    }\n                    break;\n                }\n                case 'resolved':\n                    if (entity.is_resolved === 'False') return false;\n                    break;\n                default:\n                    break;\n            }\n        }\n        return true;\n    };\n\n    checkCategory = (entity) => {\n        for (let c of this.props.category) {\n            if (entity.categories === c)\n                return true\n        }\n    };\n\n    sortByTime = (items, flag) => {\n        if (flag === 1) {\n            items.sort((a, b) => a.start_date - b.start_date);\n        } else if (flag === -1) {\n            items.sort((a, b) => b.start_date - a.start_date);\n        }\n    };\n\n    render() {\n        let entities = [...this.props.entities];\n        if (this.props.groupByCategory) {\n            if (this.props.sortByTime !== 0) {\n                 entities.sort((a, b) => {\n                    if (a.categories < b.categories) return -1;\n                    else if (a.categories > b.categories) return 1;\n                    else return this.props.sortByTime*(a.start_date-b.start_date);\n                })\n            } else {\n                entities.sort((a, b) => {\n                    if (a.categories < b.categories) return -1;\n                    else if (a.categories > b.categories) return 1;\n                    else return 0;\n                })\n            }\n        } else if (this.props.sortByTime !== 0) {\n            this.sortByTime(entities, this.props.sortByTime);\n        }\n        let items = [];\n        let {filters, category} = this.props;\n        let preCategory = '';\n        for (let entity of entities) {\n            if (filters.length > 0 && !this.checkFilter(entity)) continue;\n            if (category.length > 0 && !this.checkCategory(entity)) continue;\n            if (this.props.groupByCategory && entity.categories !== preCategory) {\n                preCategory = entity.categories;\n                items.push(<Typography variant='h4' key={preCategory}>{preCategory}</Typography>)\n            }\n            items.push(\n                <ListItem title={entity.title} description={entity.description} key={entity.title}/>\n            )\n        }\n        return (\n            <Paper>\n                {items}\n            </Paper>\n        );\n    }\n}\n\nListPanel.propTypes = {\n    entities: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    category: PropTypes.array,\n    sortByTime: PropTypes.number,\n    groupByCategory: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    entities: state.questions.entities,\n    filters: state.questions.filters,\n    category: state.questions.category,\n    sortByTime: state.questions.sortByTime,\n    groupByCategory: state.questions.groupByCategory\n});\n\nexport default connect(mapStateToProps, null)(ListPanel);","import React from 'react';\nimport * as PropTypes from \"prop-types\";\nimport {Chip} from \"@material-ui/core\";\n\nfunction FilterChip(props) {\n   return(\n       <Chip\n           label={props.label}\n           color='primary'\n           onDelete={props.onDelete}\n       />\n   )\n}\n\nFilterChip.propTypes = {\n    label: PropTypes.string.isRequired,\n    onDelete: PropTypes.func\n};\n\nexport default FilterChip;","export const addFilter = name => ({\n    type: 'add_filter',\n    name\n});\n\nexport const removeFilter = name => ({\n    type: 'remove_filter',\n    name\n});\n\nexport const addCategory = name => ({\n    type: 'add_category',\n    name\n});\n\nexport const removeCategory = name => ({\n    type: 'remove_category',\n    name\n});","import * as React from \"react\";\nimport {Dialog, ListItem, ListItemText} from \"@material-ui/core\";\nimport * as PropTypes from 'prop-types';\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Check from \"@material-ui/icons/Check\";\nimport {connect} from \"react-redux\";\nimport {addCategory, addFilter, removeCategory, removeFilter} from \"./action\";\n\nclass FilterDialog extends React.Component {\n    render() {\n        return (\n            <Dialog\n                open={this.props.open}\n                onClose={this.props.onClose}\n            >\n                <div>\n                    <List component='nav'>\n                        <ListItem>\n                            <ListItemText primary='Status'/>\n                        </ListItem>\n                        {['open', 'closed', 'voided', 'resolved'].map(n => {\n                            if (this.props.filters.includes(n)) {\n                                return (\n                                    <ListItem button onClick={()=>this.props.removeFilter(n)} key={n}>\n                                        <ListItemIcon><Check/></ListItemIcon>\n                                        <ListItemText primary={n} inset/>\n                                    </ListItem>\n                                );\n                            } else {\n                                return (\n                                    <ListItem button onClick={()=>this.props.addFilter(n)} key={n}>\n                                        <ListItemText primary={n} inset/>\n                                    </ListItem>\n                                )\n                            }\n                        })}\n                        <ListItem>\n                            <ListItemText primary='Category'/>\n                        </ListItem>\n                        {['Other', 'Politics/Intl Relations', 'Macroeconomics/Finance', 'Natural Sciences/Climate', 'Health/Disease', 'Technology'].map(n=>{\n                            if (this.props.category.includes(n)) {\n                                return (\n                                    <ListItem button onClick={()=>this.props.removeCategory(n)} key={n}>\n                                        <ListItemIcon><Check/></ListItemIcon>\n                                        <ListItemText primary={n} inset/>\n                                    </ListItem>\n                                );\n                            } else {\n                                return (\n                                    <ListItem button onClick={()=>this.props.addCategory(n)} key={n}>\n                                        <ListItemText primary={n} inset/>\n                                    </ListItem>\n                                )\n                            }\n                        })}\n                    </List>\n                </div>\n            </Dialog>\n        );\n    }\n\n}\n\nFilterDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    filters: PropTypes.array.isRequired,\n    category: PropTypes.array.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n    addCategory: PropTypes.func.isRequired,\n    removeCategory: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    filters: state.questions.filters,\n    category: state.questions.category\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addFilter: e=>dispatch(addFilter(e)),\n    addCategory: e=>dispatch(addCategory(e)),\n    removeFilter: e=>dispatch(removeFilter(e)),\n    removeCategory: e=>dispatch(removeCategory(e))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterDialog);","import React from 'react';\nimport {Icon, IconButton} from \"@material-ui/core\";\nimport FilterDialog from \"./FilterDialog\";\n\nclass FilterAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dialogOpen: false\n        }\n    }\n\n    handleClick = () => {\n        this.setState({\n            dialogOpen: true\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            dialogOpen: false\n        })\n    };\n\n    render() {\n        return (\n            <span>\n                <IconButton\n                    onClick={this.handleClick}\n                >\n                    <Icon color='primary'>add_circle</Icon>\n                </IconButton>\n                <FilterDialog\n                    open={this.state.dialogOpen}\n                    onClose={this.handleClose}\n                />\n            </span>\n        )\n    }\n}\n\nexport default FilterAdd;\n\n","import React from 'react';\nimport {Paper, Typography} from \"@material-ui/core\";\nimport FilterChip from \"./FilterChip\";\nimport FilterAdd from \"./FilterAdd\";\nimport * as PropTypes from 'prop-types'\nimport {connect} from \"react-redux\";\nimport {removeCategory, removeFilter} from \"./action\";\n\nfunction FilterPanel(props) {\n    return (\n        <Paper>\n            <Typography>Filter Panel</Typography>\n            {props.filters.map(f=>{\n                return(\n                    <FilterChip\n                        label={f}\n                        onDelete={()=>props.removeFilter(f)}\n                        key={f}\n                    />\n                )\n            })}\n            {props.category.map(n=>{\n                return(\n                    <FilterChip\n                        key={n}\n                        label={n}\n                        onDelete={()=>props.removeCategory(n)}\n                    />\n                )\n            })}\n            <FilterAdd/>\n        </Paper>\n    )\n}\n\nFilterPanel.propTypes = ({\n    filters: PropTypes.array.isRequired,\n    category: PropTypes.array.isRequired,\n    removeFilter: PropTypes.func,\n    removeCategory: PropTypes.func\n});\n\nconst mapStateToProps = state => ({\n    filters: state.questions.filters,\n    category: state.questions.category\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeFilter: n=>dispatch(removeFilter(n)),\n    removeCategory: n=>dispatch(removeCategory(n))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPanel);","export const toggleSort = {\n    type: 'toggle_sort'\n};\n\nexport const toggleGroup = {\n    type: 'toggle_group'\n};","import React from 'react'\nimport {FormControlLabel, Paper, Switch, Typography} from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport * as PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {toggleGroup, toggleSort} from \"./action\";\nimport Remove from '@material-ui/icons/Remove';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\n\nfunction SortPanel(props) {\n    let icon;\n    let text;\n    switch (props.sortByTime) {\n        case -1:\n            icon = <ArrowDownward/>;\n            text = 'Latest'\n            break;\n        case 1:\n            icon = <ArrowUpward/>;\n            text = 'Oldest'\n            break;\n        default:\n            icon = <Remove/>;\n            text = 'sort by time'\n            break;\n\n    }\n    return (\n        <Paper>\n            <Typography>Sort Panel</Typography>\n            <Fab variant={\"extended\"} color='secondary' size='medium'\n                onClick={props.toggleSort}\n            >\n                {icon}\n                {text}\n            </Fab>\n            <FormControlLabel control={\n                <Switch\n                    checked={props.groupByCategory}\n                    onChange={props.toggleGroup}\n                    value={'groupByCategory'}\n                    color='secondary'\n                />\n            } label='Group By Category'/>\n        </Paper>\n    )\n}\n\nSortPanel.propTypes = {\n    sortByTime: PropTypes.number.isRequired,\n    groupByCategory: PropTypes.bool.isRequired,\n    toggleSort: PropTypes.func.isRequired,\n    toggleGroup: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    sortByTime: state.questions.sortByTime,\n    groupByCategory: state.questions.groupByCategory\n});\n\nconst mapDispatchToProps = dispatch => ({\n    toggleSort: ()=>dispatch(toggleSort),\n    toggleGroup: ()=>dispatch(toggleGroup)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortPanel);","import React, {Component} from 'react';\nimport CSV_Reader from \"./component/CSC_Reader/CSV_Reader\";\nimport ListPanel from \"./component/ListPanel/ListPanel\";\nimport FilterPanel from \"./component/FilterPanel/FilterPanel\";\nimport SortPanel from \"./component/SortPanel/SortPanel\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <CSV_Reader/>\n                <FilterPanel/>\n                <SortPanel/>\n                <ListPanel/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\n\nconst STATUS = ['open', 'closed', 'voided', 'resolved'];\n\nconst questions = (state = {\n    entities: [],\n    filters: [],\n    category: [],\n    sortByTime: 0,\n    groupByCategory: false\n}, action) => {\n    switch (action.type) {\n        case 'add_questions':\n            return {\n                ...state,\n                entities: action.entities\n            };\n        case 'add_filter':\n            let newFilters = [...state.filters];\n            if (STATUS.includes(action.name)){\n                newFilters = state.filters.filter(n=>!STATUS.includes(n))\n            }\n            return {\n                ...state,\n                filters: [...newFilters,action.name]\n            };\n        case 'add_category':\n            return {\n                ...state,\n                category: [...state.category,action.name]\n            };\n        case 'remove_filter':\n            return {\n                ...state,\n                filters: state.filters.filter(f => f !== action.name)\n            };\n        case 'remove_category':\n            return {\n                ...state,\n                category: state.category.filter(c => c !== action.name)\n            };\n        case 'toggle_sort':\n            return {\n                ...state,\n                sortByTime: state.sortByTime===1?-1:state.sortByTime+1\n            };\n        case 'toggle_group':\n            return {\n                ...state,\n                groupByCategory: !state.groupByCategory\n            }\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    questions\n})","import {createStore} from \"redux\";\nimport reducer from \"./reducer\";\nimport {devToolsEnhancer} from \"redux-devtools-extension\";\n\nexport const store = createStore(\n    reducer,\n    devToolsEnhancer()\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}